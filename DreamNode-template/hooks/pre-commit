#!/bin/sh
#
# DreamNode Pre-Commit Hook
# Part of InterBrain DreamNode Template System
#
# DUAL PURPOSE:
# 1. INITIALIZATION: Move template files to working directory on first commit
# 2. DREAMTALK INTEGRATION: DreamSong submodule integration (future)
#

# === PHASE 1: INITIALIZATION (First Commit Only) ===
# Check if this is the first commit by seeing if HEAD exists
if ! git rev-parse --verify HEAD >/dev/null 2>&1; then
    echo "DreamNode Pre-Commit Hook: Initial setup - moving template files to working directory"
    
    # Move template files from .git/ to working directory
    if [ -f ".git/udd" ]; then
        mv .git/udd .udd
        echo "  ✓ Moved .git/udd to .udd"
    fi
    
    if [ -f ".git/README.md" ]; then
        mv .git/README.md README.md
        echo "  ✓ Moved .git/README.md to README.md"
    fi
    
    if [ -f ".git/LICENSE" ]; then
        mv .git/LICENSE LICENSE
        echo "  ✓ Moved .git/LICENSE to LICENSE"
    fi
    
    # Stage the moved files for this commit
    git add .udd README.md LICENSE 2>/dev/null
    
    echo "  ✓ DreamNode initialization complete"
fi

# === PHASE 2: DREAMTALK INTEGRATION (Future Implementation) ===
# 
# FUTURE FUNCTIONALITY for DreamSong submodule integration:
# - Analyzes Obsidian canvas files (.canvas) for external media references
# - Identifies media files that come from other DreamNode repositories  
# - Automatically imports external sources as git submodules
# - Updates file paths in canvas files to reference submodule paths
# - Maintains seamless UX while creating proper git relationships
# - Enables coherence beacon propagation via submodule relationships
#
# Future implementation will:
# 1. Scan for .canvas files in staging area
# 2. Parse canvas JSON for external media references
# 3. Identify which references come from other DreamNodes
# 4. Import those DreamNodes as submodules
# 5. Update canvas file paths to reference submodule paths
# 6. Re-stage modified canvas files

echo "DreamNode Pre-Commit Hook: DreamSong submodule integration (placeholder)"

# Allow commit to proceed
exit 0